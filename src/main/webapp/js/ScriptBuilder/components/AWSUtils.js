/*
 * This file is part of the AuScope Virtual Exploration Geophysics Lab (VEGL) project.
 * Copyright (c) 2011 CSIRO Earth Science and Resource Engineering
 *
 * Licensed under the terms of the GNU Lesser General Public License.
 */
Ext.namespace("ScriptBuilder");
Ext.ux.ComponentLoader.load( {url : ScriptBuilder.componentPath + "AWSUtils.json"});

AWSUtilsNode = Ext.extend(ScriptBuilder.BaseComponent, {

    constructor : function(container) {
        AWSUtilsNode.superclass.constructor.apply(this, [ container,
                "AWS Utils Object", "AWSUtils", "s" ]);

        var numShells = container.getShellCommands().length;
        this.values.uniqueName = "shell" + numShells;
    },
    
    /**
     * The tab string used for generating our python script
     */
    pTab : '    ',
    
    /**
     * The new line string used for generating our python script
     */
    pNewLine : '\n',
    
    /**
     * This is where we dynamically generate a python Getter/Setter class from the job object that
     * is sent to us 
     */
    getScript : function() {
        var text = '';
        
        text += '# ----- Autogenerated AWS Utility Functions -----' + this.pNewLine;
        text += '# Uploads inFilePath to the specified bucket with the specified key' + this.pNewLine;
        text += 'def awsUpload(inFilePath, awsBucket, awsKey):' + this.pNewLine;
        text += this.pTab + 'queryPath = (awsBucket + "/" + awsKey).replace("//", "/")' + this.pNewLine;
        text += this.pTab + 'print "awsUpload: " + inFilePath + " to " + queryPath' + this.pNewLine;
        text += this.pTab + 'subprocess.call(["aws", "put", queryPath, inFilePath, "--set-acl=public-read"])' + this.pNewLine;
        text += this.pNewLine;
        text += '# downloads the specified key from bucket and writes it to outfile' + this.pNewLine;
        text += 'def awsDownload(awsBucket, awsKey, outFilePath):' + this.pNewLine;
        text += this.pTab + 'queryPath = (awsBucket + "/" + awsKey).replace("//", "/")' + this.pNewLine;
        text += this.pTab + 'print "awsDownload: " + queryPath + " to " + outFilePath' + this.pNewLine;
        text += this.pTab + 'subprocess.call(["aws", "get", queryPath, ">", outFilePath])' + this.pNewLine;
        text += '# -----------------------------------------------' + this.pNewLine;
        text += this.pNewLine;
        
        return text;
    }
});
